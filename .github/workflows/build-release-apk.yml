name: Build & Release APK

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags (e.g., v1.0.0)
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Using Python 3.9 based on your project
          cache: 'pip'  # Cache pip dependencies

      - name: Set up JDK for Android build
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false

      - name: Install Dependencies
        run: |
          poetry install --no-interaction

      - name: Extract Version from Tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install Flet and Build Tools
        run: |
          pip install flet flet-builder
          pip install build --upgrade

      - name: Build APK
        run: |
          flet build apk --target=./src/main.py

      - name: Copy APK to Deployment Directory
        run: |
          mkdir -p deployment
          find . -name "*.apk" -exec cp {} deployment/ \;

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: logistics-app-v${{ steps.get_version.outputs.version }}
          path: deployment/*.apk
          retention-days: 30

      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "## Logistics App v${{ steps.get_version.outputs.version }}" > RELEASE_NOTES.md
          echo "Released on $(date +'%Y-%m-%d')" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### Changes" >> RELEASE_NOTES.md
          git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" >> RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Logistics v${{ steps.get_version.outputs.version }}
          body_path: RELEASE_NOTES.md
          files: deployment/*.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optional: Notify team about new release
      - name: Send Notification
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: releases
          SLACK_TITLE: New Logistics App Release
          SLACK_MESSAGE: "Version v${{ steps.get_version.outputs.version }} has been released! Download it from GitHub Releases."
          SLACK_COLOR: good
